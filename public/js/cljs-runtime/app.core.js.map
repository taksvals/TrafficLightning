{"version":3,"sources":["app/core.cljs"],"mappings":";AAIA,AAAKA,uBAAY,gDAAA,mFAAA,MAAA,SAAA,QAAA,1JAACC;AAElB,AAAKC,oBAAS,gDAAA,hDAACD;AAEf,AAAKE,yBAAc,gDAAA,hDAACF;AAEpB,wBAAA,xBAAMG,wDAAaC;AAAnB,AACE,0EAAA,nEAACC,+CAAO,AAACC,eAAKF,wFAAM,AAACG,gBAAMH;;AAG7B,uBAAA,vBAAMI;AAAN,AACE,IAAAC,WACC,AAAA;AAAA,AAAE,OAACI,mDAAMX,uBAAc,WAAKY;AAAL,AAAU,OAACC,cAAID;;;IADvCJ,eAAC,AAACC,sBAAOV,kBAAS,YAAA,ZAACW;AAAD,AAAiB,OAACC,mDAAMd,qBAAYI;GAApC;AAAlB,AAAA,QAAAO,6CAAAA,2CAAAD,YAAAC,uBAAAD;;AAGF,sBAAA,tBAAMO;AAAN,AACE,IAAAC,WACA,AAAA;AAAA,AAAE,OAACJ,mDAAMX,uBAAc,WAAKY;AAAL,AAAU,OAACC,cAAID;;;IADtCI,eAAC,cAAA,AAAAC,dAACC,8BAAkBnB;AAApB,AAAA,QAAAiB,6CAAAA,2CAAAD,YAAAC,uBAAAD;;AAIF,iBAAA,jBAAMI;AAAN,AAAA,0FAAA,mDAAA,mFAAA,iEAAA,2CAAA,kFAAA,8DAAA,AAAAF,gDAAA,nIAE2BX,mGAAuBN;;AAElD,gBAAA,hBAAMoB;AAAN,AAAA,0FAAA,mDAAA,mFAAA,iEAAA,2CAAA,iFAAA,6HAAA,jJAE2BN,kFAAqB,cAAA,AAAAG,dAACJ,8BAAKb;;AAEtD,mBAAA,nBAAMqB;AAAN,AAAA,0FAAA,uEAAA,0GAAA,vBAEIF,0GACAC;;AAEJ,kCAAA,lCAAME,4EAAwBC,OAAOC;AAArC,AAAA,0FAAA,iEAAA,2CAAA,wDACwB,EAAI,AAACC,6CAAEF,OAAOC,QACZA,MACA,CAAA,uDAAgBA;;AAE1C,6BAAA,7BAAME;AAAN,AACE,IAAMH,SAAO,gBAAA,AAAAN,hBAACZ,gCAAOR;AAArB,AAAA,0FAAA,iDAAA,mFAAA,+EAAA,0HAAA,cAAA,0HAAA,iBAAA,0HAAA,1TAGKyB,gCAAuBC,wGACvBD,gCAAuBC,2GACvBD,gCAAuBC;;AAE9B,yBAAA,zBAAMI;AAAN,AAAA,0FAAA,yGAAA,mFAAA,kDAAA,4BAAA,sHAAA,3TAEI,AAACC,YAAe5B,4QAEf0B,sHACAL;;AAEL;;;kBAAA,lBAAuBQ;AAAvB,AAGE,wDAAA,jDAACC,oIAAaH,+BACD,wBAAA,xBAAiBI;;AAG/B,gBAAA,hBAAMC;AAAN,AACE,YAAA,ZAACJ;;AACD,OAACC","names":["app.core/color-order","reagent.core.atom","app.core/interval","app.core/start-clicked","app.core/first-to-end","col","cljs.core.concat","cljs.core/rest","cljs.core/first","app.core/start-timer","G__42289","fexpr__42288","cljs.core/reset!","js/setInterval","cljs.core.swap_BANG_","val","cljs.core/not","app.core/stop-timer","G__42291","fexpr__42290","cljs.core/deref","js/clearInterval","app.core/start","app.core/stop","app.core/buttons","app.core/traffic-lightning-item","active","color","cljs.core._EQ_","app.core/traffic-lightning","app.core/app-container","js/console.log","app.core/render","reagent.dom.render","js/document","app.core/main"],"sourcesContent":["(ns app.core\n  (:require [reagent.dom :as rdom])\n  (:require [reagent.core :as r]))\n\n(def color-order (r/atom [\"red\" \"yellow\" \"green\" \"yellow\"]))\n\n(def interval (r/atom 0))\n\n(def start-clicked (r/atom false))\n\n(defn first-to-end[col]\n  (concat (rest col) [(first col)]))\n\n\n(defn start-timer []\n  ((reset! interval (js/setInterval #(swap! color-order first-to-end) 1000))\n   (#(swap! start-clicked (fn [val] (not val))))))\n\n(defn stop-timer []\n  ((js/clearInterval @interval)\n  (#(swap! start-clicked (fn [val] (not val))))))\n\n\n(defn start []\n  [:div\n   [:button.btn {:on-click start-timer :disabled @start-clicked} \"Start\"]])\n\n(defn stop []\n  [:div\n   [:button.btn {:on-click stop-timer :disabled (not @start-clicked)} \"Stop\"]])\n\n(defn buttons []\n  [:div.btn-align\n   [start]\n   [stop]])\n\n(defn traffic-lightning-item [active color]\n   [:div.circle {:class (if (= active color)\n                          color\n                          (str \"default-\" color))}])\n\n(defn traffic-lightning []\n  (let [active (first @color-order)]\n    [:<>\n     [:div.traffic-light\n      [traffic-lightning-item active \"red\"]\n      [traffic-lightning-item active \"yellow\"]\n      [traffic-lightning-item active \"green\"]]]))\n\n(defn app-container []\n   [:div.container\n    (js/console.log start-clicked)\n    [:h1 \"Traffic lightning\"]\n    [traffic-lightning]\n    [buttons]])\n\n(defn ^:dev/after-load render\n  \"Render the toplevel component for this app.\" \n  [] \n  (rdom/render [app-container]              \n               (.getElementById js/document \"app\")))\n \n \n (defn main[]\n   (js/console.log \"MAIN FN Reloaded\")\n   (render))"]}